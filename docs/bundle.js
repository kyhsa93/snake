(()=>{"use strict";class t extends Phaser.Scene{constructor(){super({key:t.name})}create(){this.add.rectangle(0,0,a.width,a.height,0,.8).setOrigin(0);const t=this.add.text(0,0,"Start Game",{fontSize:"32px",color:"#FFF"}).setOrigin(.5);t.setInteractive(),t.on("pointerdown",(()=>this.scene.start("GameScene"))),t.setPosition(a.width/2,a.height/2),this.cameras.main.centerOn(a.width/2,a.height/2)}}class e extends Phaser.Scene{constructor(){super({key:"GameOverScene"})}create(){const{width:t,height:e}=this.scale;this.add.text(t/2,e/2,"Game Over",{fontSize:"48px",color:"#ffffff"}).setOrigin(.5);const s=this.add.text(t/2,e/2+100,"Restart",{fontSize:"32px",color:"#ffffff"}).setOrigin(.5);s.setInteractive(),s.on("pointerdown",(()=>{this.scene.start("GameScene")}))}}let s=0;function i(t){return Math.floor(t/n)*n}class o{constructor(t){this.scene=t,this.body=[],this.direction=Phaser.Math.Vector2.RIGHT,this.growAmount=0,this.moveDelay=150,this.lastMoveTime=0,this.alive=!0;const e=i(a.width/2),s=i(a.height/2),o=Phaser.Display.Color.RandomRGB().color32;for(let t=0;t<3;++t)this.body.push(this.scene.add.rectangle(e-t*n,s,n,n,o).setOrigin(0))}update(t){return t>=this.lastMoveTime+this.moveDelay&&(this.lastMoveTime=t,this.move())}move(){const t=this.body[0],e=t.x+this.direction.x*n,s=t.y+this.direction.y*n;if(e<0||e>=a.width||s<0||s>=a.height)return this.alive=!1,!1;for(let t=this.body.length-1;t>0;--t)if(this.body[t].x===e&&this.body[t].y===s)return this.alive=!1,!1;const i=this.body.pop();if(!i)throw new Error("Snake has empty body");if(i.setPosition(e,s),this.body.unshift(i),this.growAmount>0){const t=Phaser.Display.Color.RandomRGB().color32;this.body.push(this.scene.add.rectangle(i.x,i.y,n,n,t).setOrigin(0)),this.growAmount--}return!0}grow(){this.growAmount+=1}collideWithFood(t){return this.body[0].x===t.x&&this.body[0].y===t.y}}class r{constructor(t){this.scene=t,this.x=0,this.y=0,this.sprite=this.scene.add.rectangle(this.x,this.y,n,n,Phaser.Display.Color.RandomRGB().color32).setOrigin(0),this.randomize()}randomize(){const t=a.width/n-1,e=a.height/n-1;this.x=Math.floor(Math.random()*t)*n,this.y=Math.floor(Math.random()*e)*n,this.sprite.setFillStyle(Phaser.Display.Color.RandomRGB().color32),this.sprite.setPosition(this.x,this.y)}avoidOverlap(t){let e=!0;for(;e;)this.randomize(),e=t.body.some((t=>t.x===this.x&&t.y===this.y))}}class h extends Phaser.Scene{constructor(){super({key:"GameScene"})}create(){var t;this.cameras.main.setBounds(0,0,a.width,a.height),this.snake=new o(this),this.food=new r(this),this.cursors=null===(t=this.input.keyboard)||void 0===t?void 0:t.createCursorKeys(),this.scoreText=this.add.text(16,16,"Score: 0",{fontSize:"32px",color:"#FFF"}),this.cameras.main.setPosition((a.width-this.cameras.main.width)/2,(a.height-this.cameras.main.height)/2),this.input.on("pointerdown",(t=>{const e=t.x,s=t.y,i=this.cameras.main.centerX,o=this.cameras.main.centerY;if(!this.snake||!this.snake.alive)return;const r=e-i,h=s-o;Math.abs(r)>Math.abs(h)?r>0&&!this.snake.direction.equals(Phaser.Math.Vector2.LEFT)?this.snake.direction=Phaser.Math.Vector2.RIGHT:r<0&&!this.snake.direction.equals(Phaser.Math.Vector2.RIGHT)&&(this.snake.direction=Phaser.Math.Vector2.LEFT):h>0&&!this.snake.direction.equals(Phaser.Math.Vector2.UP)?this.snake.direction=Phaser.Math.Vector2.DOWN:h<0&&!this.snake.direction.equals(Phaser.Math.Vector2.DOWN)&&(this.snake.direction=Phaser.Math.Vector2.UP)}))}changeBackgroundColor(){const t=Phaser.Display.Color.RandomRGB().color32;this.cameras.main.setBackgroundColor(t)}update(t){var e;if(!(null===(e=this.snake)||void 0===e?void 0:e.alive))return void this.scene.start("GameOverScene");if(!this.cursors||!this.food)return;const{left:i,right:o,up:r,down:h}=this.cursors,{x:a,y:c}=this.snake.direction;var d;Phaser.Input.Keyboard.JustDown(i)&&a!==n?this.snake.direction!==Phaser.Math.Vector2.RIGHT&&(this.snake.direction=Phaser.Math.Vector2.LEFT):Phaser.Input.Keyboard.JustDown(o)&&a!==-n?this.snake.direction!==Phaser.Math.Vector2.LEFT&&(this.snake.direction=Phaser.Math.Vector2.RIGHT):Phaser.Input.Keyboard.JustDown(r)&&c!==n?this.snake.direction!==Phaser.Math.Vector2.DOWN&&(this.snake.direction=Phaser.Math.Vector2.UP):Phaser.Input.Keyboard.JustDown(h)&&c!==-n&&this.snake.direction!==Phaser.Math.Vector2.UP&&(this.snake.direction=Phaser.Math.Vector2.DOWN),this.snake.update(t)&&this.snake.collideWithFood(this.food)&&(this.snake.grow(),this.food.avoidOverlap(this.snake),this.scoreText&&(d=this.scoreText,s+=10,d.setText("Score: "+s)),this.changeBackgroundColor())}}const a={type:Phaser.AUTO,width:800,height:600,backgroundColor:"#222222",scene:[t,h,e],mode:Phaser.Scale.RESIZE,autoCenter:Phaser.Scale.CENTER_BOTH},n=16;function c(){const t=document.querySelector("canvas");if(!t)return;const e=window.innerWidth,s=window.innerHeight,i=e/s,o=a.width/a.height;let r,h;i<o?(r=Math.min(e,a.width),h=r/o):(h=Math.min(s,a.height),r=h*o),t.style.width=`${r}px`,t.style.height=`${h}px`}new Phaser.Game(a),window.addEventListener("resize",c),c()})();